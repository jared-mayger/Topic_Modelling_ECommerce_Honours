import torch
import torch.nn as nn
import torchvision.transforms as transforms
import torchvision.models as models

# Load the pre-trained ResNet-50 model
resnet50 = models.resnet50(pretrained=True)

# Remove the last fully-connected layer to get the features
resnet50 = nn.Sequential(*list(resnet50.children())[:-1])

# Set the model to evaluation mode
resnet50.eval()

# Define the transformation to apply to each image
transform = transforms.Compose([
    transforms.Resize((224, 224)),
    transforms.ToTensor(),
    transforms.Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
])

# Loop over the images in the folder and extract their features
features = []
for filename in os.listdir('path/to/folder'):
    img = Image.open(os.path.join('path/to/folder', filename))
    img = transform(img)
    img = img.unsqueeze(0)
    with torch.no_grad():
        feature = resnet50(img)
    features.append(feature.squeeze().numpy())

# `features` now contains the extracted features for all the images in the folder
